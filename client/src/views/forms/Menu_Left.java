package views.forms;

import events.EventMenuLeft;
import events.PublicEvent;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import models.UserAccountModel;
import net.miginfocom.swing.MigLayout;
import views.components.ItemPeople;
import views.swing.ScrollBar;

public class Menu_Left extends javax.swing.JPanel {

    private List<UserAccountModel> userAccount;

    public Menu_Left() {
        initComponents();
        init();
    }

    private void init() {
        sp.setVerticalScrollBar(new ScrollBar());
        menuList.setLayout(new MigLayout("fillx", "0[]0", "1[]1"));
        userAccount = new ArrayList<>();
        PublicEvent.getInstance().addEventMenuLeft(new EventMenuLeft() {
            @Override
            public void newUser(List<UserAccountModel> users) {
                for (UserAccountModel d : users) {
                    userAccount.add(d);
                    menuList.add(new ItemPeople(d), "wrap");
                    refreshMenuList();
                }
            }

            @Override
            public void userConnect(int userID) {
                for (UserAccountModel u : userAccount) {
                    if (u.getUserID() == userID) {
                        u.setStatus(true);
                        PublicEvent.getInstance().getEventMain().updateUser(u);
                        break;
                    }
                }

                if (messageBtn.isSelected()) {
                    for (Component com : menuList.getComponents()) {
                        ItemPeople item = (ItemPeople) com;
                        if (item.getUser().getUserID() == userID) {
                            item.updateStatus();
                            break;
                        }
                    }
                }
            }

            @Override
            public void userDisconnect(int userID) {
                for (UserAccountModel u : userAccount) {
                    if (u.getUserID() == userID) {
                        u.setStatus(false);
                        PublicEvent.getInstance().getEventMain().updateUser(u);
                        break;
                    }
                }

                if (messageBtn.isSelected()) {
                    for (Component com : menuList.getComponents()) {
                        ItemPeople item = (ItemPeople) com;
                        if (item.getUser().getUserID() == userID) {
                            item.updateStatus();
                            break;
                        }
                    }
                }
            }

        });
        showMessage();
    }

    private void showMessage() {
        // Test data
        menuList.removeAll();
        for (UserAccountModel d : userAccount) {
            menuList.add(new ItemPeople(d), "wrap");
        }
        refreshMenuList();
    }

//    private void showGroups() {
//        menuList.removeAll();
//        for (int i = 0; i < 10; i++) {
//            menuList.add(new ItemPeople(null), "wrap");
//        }
//        refreshMenuList();
//    }

//    private void showBox() {
//        menuList.removeAll();
//        for (int i = 0; i < 10; i++) {
//            menuList.add(new ItemPeople(null), "wrap");
//        }
//        refreshMenuList();
//    }

    private void refreshMenuList() {
        menuList.repaint();
        menuList.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JLayeredPane();
        messageBtn = new views.components.MenuButton();
        groupBtn = new views.components.MenuButton();
        boxBtn = new views.components.MenuButton();
        sp = new javax.swing.JScrollPane();
        menuList = new javax.swing.JLayeredPane();

        setBackground(new java.awt.Color(249, 249, 249));

        menu.setBackground(new java.awt.Color(143, 171, 152));
        menu.setOpaque(true);
        menu.setPreferredSize(new java.awt.Dimension(138, 45));
        menu.setLayout(new java.awt.GridLayout(1, 3));

        messageBtn.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icons/message_selected.png"))); // NOI18N
        messageBtn.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icons/message.png"))); // NOI18N
        messageBtn.setSelected(true);
        messageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageBtnActionPerformed(evt);
            }
        });
        menu.add(messageBtn);

        groupBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/group.png"))); // NOI18N
        groupBtn.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icons/group_selected.png"))); // NOI18N
        groupBtn.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icons/group.png"))); // NOI18N
        groupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupBtnActionPerformed(evt);
            }
        });
        menu.add(groupBtn);

        boxBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/box.png"))); // NOI18N
        boxBtn.setIconSelected(new javax.swing.ImageIcon(getClass().getResource("/icons/box_selected.png"))); // NOI18N
        boxBtn.setIconSimple(new javax.swing.ImageIcon(getClass().getResource("/icons/box.png"))); // NOI18N
        boxBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxBtnActionPerformed(evt);
            }
        });
        menu.add(boxBtn);

        sp.setBackground(new java.awt.Color(236, 234, 228));
        sp.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        menuList.setBackground(new java.awt.Color(236, 234, 228));
        menuList.setOpaque(true);

        javax.swing.GroupLayout menuListLayout = new javax.swing.GroupLayout(menuList);
        menuList.setLayout(menuListLayout);
        menuListLayout.setHorizontalGroup(
            menuListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        menuListLayout.setVerticalGroup(
            menuListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 548, Short.MAX_VALUE)
        );

        sp.setViewportView(menuList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sp)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(sp))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void messageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageBtnActionPerformed
        if (!messageBtn.isSelected()) {
            messageBtn.setSelected(true);
            groupBtn.setSelected(false);
            boxBtn.setSelected(false);
            showMessage();
        }
    }//GEN-LAST:event_messageBtnActionPerformed

    private void boxBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxBtnActionPerformed
        if (!boxBtn.isSelected()) {
            messageBtn.setSelected(false);
            groupBtn.setSelected(false);
            boxBtn.setSelected(true);
//            showBox();
        }
    }//GEN-LAST:event_boxBtnActionPerformed

    private void groupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupBtnActionPerformed
        if (!groupBtn.isSelected()) {
            messageBtn.setSelected(false);
            groupBtn.setSelected(true);
            boxBtn.setSelected(false);
//            showGroups();
        }
    }//GEN-LAST:event_groupBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private views.components.MenuButton boxBtn;
    private views.components.MenuButton groupBtn;
    private javax.swing.JLayeredPane menu;
    private javax.swing.JLayeredPane menuList;
    private views.components.MenuButton messageBtn;
    private javax.swing.JScrollPane sp;
    // End of variables declaration//GEN-END:variables
}
